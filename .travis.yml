# linux matrix
language: python
os: linux
python:
    - "3.7"
    - "3.6"
    - "3.5"
env:
  - MPI=
  - MPI=1

# OSX matrix
matrix:
    fast_finish: true
    include:
        - os: osx
          language: generic
          env: PYTHON_VERSION=python3 MPI= MACOSX_DEPLOYMENT_TARGET=10.9
        - os: osx
          language: generic
          env: PYTHON_VERSION=python3 MPI=
        - os: osx
          osx_image: xcode11.0
          language: generic
          env: PYTHON_VERSION=python2 MPI=
        - os: osx
          osx_image: xcode11.0
          language: generic
          env: PYTHON_VERSION=python3 MPI=

    allow_failures:
        - os: osx
          language: generic
          env: PYTHON_VERSION=python2 MPI=
        - os: osx
          language: generic
          env: PYTHON_VERSION=python3 MPI=
        - os: osx
          osx_image: xcode11.0
          language: generic
          env: PYTHON_VERSION=python2 MPI=
        - os: osx
          osx_image: xcode11.0
          language: generic
          env: PYTHON_VERSION=python3 MPI=1 MACOSX_DEPLOYMENT_TARGET=10.9


# System packages
addons:
    apt:
        packages:
            - gfortran
            - libblas3
            - liblapack3
            - openmpi-bin
            - libopenmpi-dev
    homebrew:
        packages: 
            - gcc
            - python3
            - openmpi
        update: true

# OSX setup
before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]];
      then 
          pip install virtualenv;
          virtualenv venv -p $PYTHON_VERSION;
          source venv/bin/activate;
      fi

install:
    - pip install numpy
    - if [ "$MPI" ]; then 
          FC=mpif90 CC=mpicc CXX=mpicxx python setup.py install;
      else 
          python setup.py --no-mpi install;
      fi
    - make FC=mpif90 MPI=$MPI gaussian

    # requirements install
    - pip install -r requirements.txt
    - if [ "$MPI" ]; then pip install mpi4py; fi

# Run tests
script:
    - if [ "$MPI" ];
      then 
          mpirun -np 2 python run_pypolychord.py;
      else 
          python run_pypolychord.py; 
      fi
    - if [ "$MPI" ];
      then 
          mpirun -np 2 ./bin/gaussian ini/gaussian.ini;
      else 
          ./bin/gaussian ini/gaussian.ini;
      fi
